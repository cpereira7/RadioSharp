name: .NET Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest  

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'  

    - name: Restore dependencies
      run: dotnet restore RadioSharp.App/RadioSharp.App.csproj

    - name: Build
      run: dotnet build RadioSharp.App/RadioSharp.App.csproj --configuration Release --no-restore

    - name: Publish
      run: dotnet publish RadioSharp.App/RadioSharp.App.csproj --configuration Release --no-restore --output publish

    - name: Archive binaries
      uses: actions/upload-artifact@v2
      with:
        name: RadioSharp-App-${{ github.run_number }}
        path: publish/**
        if-no-files-found: error

    - name: List files in publish directory
      run: Get-ChildItem -Path publish/ -Recurse
      shell: pwsh

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: RadioSharp-App-${{ github.run_number }}

      - name: Delete existing tag
        run: |
          TAG_NAME=${{ github.ref }}
          if git rev-parse $TAG_NAME >/dev/null 2>&1; then
            git tag -d $TAG_NAME
            git push --delete origin $TAG_NAME
          fi
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Zip artifact
        run: Compress-Archive -Path RadioSharp-App-${{ github.run_number }} -DestinationPath RadioSharp-App-${{ github.run_number }}.zip
        shell: pwsh

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RadioSharp-App-${{ github.run_number }}.zip
          asset_name: RadioSharp-App-${{ github.run_number }}.zip
          asset_content_type: application/zip
